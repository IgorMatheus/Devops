- name: Playbook Worker
  hosts: worker
  user: vagrant
  tasks:
   - name: Update Packages
     become: true
     become_user: root
     apt:
       update_cache: yes
   - name: br_netfilter - Load the module
     ansible.builtin.shell: sudo modprobe br_netfilter
   - name: br_netfilter - Create the new kernel parameters
     ansible.builtin.shell: |
       cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf \n
       br_netfilter
       EOF
       cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf \n
       net.bridge.bridge-nf-call-ip6tables = 1
       net.bridge.bridge-nf-call-iptables = 1
       EOF
       sudo sysctl --system
### CONTAINERD ###
   - name: Containerd - Download and Extract File
     ansible.builtin.shell: |
       wget https://github.com/containerd/containerd/releases/download/v1.6.14/containerd-1.6.14-linux-amd64.tar.gz
       sudo tar -xzvf containerd-1.6.14-linux-amd64.tar.gz -C /usr/local
   - name: Containerd - systemd containerd.service
     ansible.builtin.shell: |
       sudo curl https://raw.githubusercontent.com/containerd/containerd/main/containerd.service --create-dirs -o /usr/local/lib/systemd/system/containerd.service
       sudo systemctl daemon-reload
       sudo systemctl enable --now containerd
   - name: Containerd - Installing runc
     ansible.builtin.shell: |
       wget https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
       sudo install -m 755 runc.amd64 /usr/local/sbin/runc
   - name: Containerd - Installing CNI plugins
     ansible.builtin.shell: |
       wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
       sudo mkdir -p /opt/cni/bin
       sudo tar -xzvf cni-plugins-linux-amd64-v1.1.1.tgz -C /opt/cni/bin 
### KUBERNETES ###
   - name: Kubernetes - packages needed to use the Kubernetes 
     become: true
     become_user: root
     ansible.builtin.package:
       name:
         - apt-transport-https
         - ca-certificates
         - curl
       state: latest
   - name: Kubernetes - Download the Google Cloud public signing key 
     ansible.builtin.shell: |
       sudo mkdir -p /etc/apt/keyrings
       sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   - name: Kubernetes - Add the Kubernetes apt repository
     ansible.builtin.shell: |
       echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   - name: Kubernetes - Update Packages
     become: true
     become_user: root
     apt:
       update_cache: yes
   - name: Kubernetes - Install
     become: true
     become_user: root
     ansible.builtin.package:
       name:
         - kubelet=1.25.1-00
         - kubeadm=1.25.1-00
         - kubectl=1.25.1-00
   - name: Kubernetes - apt-mark hold
     ansible.builtin.shell: |
       sudo apt-mark hold kubelet kubeadm kubectl
   - name: Change ip_forward
     become: true
     become_user: root
     ansible.builtin.shell: |
       echo 1 > /proc/sys/net/ipv4/ip_forward
